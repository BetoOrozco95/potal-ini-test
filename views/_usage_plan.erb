<% subscription = begin
  # use the @subscription instance if it pertains to this usage plan.  don't
  # assume the same addons will exist for other plans, so use a new Subscription
  # in that case
  if @subscription.usage_plan_id == usage_plan.id
    @subscription
  else
    Subscription.assemble(usage_plan)
  end
end
if @current_account_or_token
  subscription.reset_price_for_credit!(@current_account_or_token.prorated_credit)
end
%>

<div class="col-12 mb-2 bg-white px-2 py-3">
  <div class="col-12">
    <div class="row">
      <div class="col-12">
        <span class="rg-branding-primary usage-plan-name"><%= h(usage_plan.name) %></span>
      </div>
    </div>
    <div class="row">
      <div class="col-12">
            <% if subscription.price_display == %>
        <span class="small usage-plan-field">Price:</span> <br>
      <% end %>
      <%# TODO: update this as plan addon selections change %>
        <span class="rg-branding-primary usage-plan-price"><%= h(subscription.price_display) %></span>
      </div>
    </div>
    <div class="row">
      <div class="col-12">
        <a class="rg-branding-primary usage-plan-details" data-toggle="collapse" href="#collapse-<%= usage_plan.name.parameterize %>" role="button" aria-expanded="false" aria-controls="collapse-<%= usage_plan.name.parameterize %>">
      Show Details
      </a>
      </div>
      </div>
  </div>
</div>
<div id="collapse-<%= usage_plan.name.parameterize %>" class="row collapse px-4 usage-plan-content">
<table class="table mb-1">
  <tr>
    <th class="border-right border-top-0">Name</th>
    <td class="border-top-0"><%= h(usage_plan.name) %></td>
  </tr>
  <% unless usage_plan.description.blank? %>
    <tr>
      <th class="border-right border-top-0 align-top">Description</th>
      <td>
        <%= usage_plan.description.html_safe %>
        <% if usage_plan.time_plan && !usage_plan.time_plan.description.blank? %>
          <%= usage_plan.time_plan.description.html_safe %>
        <% end %>
        <% if usage_plan.quota_plan && !usage_plan.quota_plan.description.blank? %>
            <br />
          <%= usage_plan.quota_plan.description.html_safe %>
        <% end %>
        <% usage_plan.plan_addons.of_component_type(:misc).each do |plan_addon| %>
          <% unless plan_addon.description.blank?%>
            <br />
            <%= plan_addon.description.html_safe %>
          <% end %>
        <% end %>
      </td>
    </tr>
  <% end %>

  <% if usage_plan.base_price.to_f > 0.0 %>
    <tr>
      <th class="border-right border-top-0">Base Price</th>
      <td class="right-align">
        <span class="price_display" data-price="<%= usage_plan.base_price %>"><%= h(usage_plan.base_price_display) %></span>
      </td>
    </tr>
  <% end %>

  <% if usage_plan.included_max_devices.to_i > 0 %>
    <tr>
      <th class="border-right border-top-0">Devices</th>
      <td>
        Plan includes support for up to <b><%= usage_plan.included_max_devices %></b> devices.
        <% if usage_plan.plan_addons.optional.of_component_type(:max_devices) %>
          Support for more devices may be selected from the Optional Addons section below.
        <% end %>
      </td>
    </tr>
  <% end %>

  <% if usage_plan.account_group && usage_plan.account_group.policy %>
    <% usage_plan.account_group.policy.bandwidth_queues.each do |queue| -%>
      <% if queue.net_apps.empty? && queue.wan_targets.empty? %>
        <tr>
          <th class="border-right border-top-0">Speed</th>
          <td>
            <%= queue.bandwidth %>
            <!--
              <br/>
              (Up to <%= (queue.download_bw_bits / (50 * 1000)).to_i %></strong>x faster than dialup).
                -->
          </td>
        </tr>
        <% break %>
      <% end %>
    <% end %>
  <% end %>

  <tr>
    <th class="border-right border-top-0">Expires</th>
    <td>
      <% if usage_plan.unlimited_usage_lifetime? %>
        usage never expires
      <% elsif usage_plan.no_usage_lifetime? %>
        maintain existing usage expiration
      <% elsif usage_plan.absolute_usage_lifetime %>
        <%= l(usage_plan.absolute_usage_lifetime) %>
      <% elsif usage_plan.usage_lifetime_time %>
        <%= pluralize(usage_plan.usage_lifetime_time, usage_plan.usage_lifetime_time_unit.singularize) %> after payment.
      <% end %>
    </td>
  </tr>

<% if (!usage_plan.time_plan.try(:unlimited_usage_minutes?) && (usage_plan.time_plan || usage_plan.optional_time_plans.exists?)) %>
  <tr>
    <th class="border-right border-top-0">Time</th>
    <td class="price-group">
      <%# TODO: write a better description of what "Time" is, and how it differs from
          expiration %>
      <p>
        Usage Time is an allotment of Internet access time<%
          if subscription.max_devices > 1 || usage_plan.plan_addons.of_component_type(:max_devices).exists?
        %> which may be shared among your devices. Additional simultaneous login
        sessions results in faster depletion of your usage time.<br>Additional
        simultaneous login sessions results in faster depletion of your usage time<%
        end %>.
      </p>

      <% if (usage_plan.time_plan && !usage_plan.time_plan.unlimited_usage_minutes?) %>
        <b>Included with Plan:</b>
        <%= usage_plan.time_plan.usage_display %>
        <% if usage_plan.time_plan.rollover_usage_minutes %>
          : existing time is rolled-over.
        <% end %>
        <%= render :partial => 'time_plan', object: usage_plan.time_plan, locals: {usage_plan: usage_plan, subscription: subscription} %>
      <% elsif usage_plan.time_plan && !usage_plan.time_plan.price_free? %>
        <span class="included_price_element d-none" data-price="<%= usage_plan.time_plan.price %>">
      <% end %>

      <% if usage_plan.optional_time_plans.exists? %>
        <br>
        <b>Optional Time configurations:</b>
        <br>
        <%= select_tag(
              "usage_plan[#{usage_plan.id}][time_plan_id]",
              options_for_select(
                [
                  usage_plan.time_plan ?
                    [
                      "#{usage_plan.time_plan.name} (#{usage_plan.time_plan.price_display(currency_unit: usage_plan.currency_unit)}) -- included with plan",
                      usage_plan.time_plan.id,
                      { 'data-toggle' => "collapse", 'data-target' => "\#time_plan_#{usage_plan.id}_#{usage_plan.time_plan_id}" }
                    ] : nil
                ].compact +
                usage_plan.optional_time_plans.map { |time_plan|
                  [
                    "#{time_plan.name} (#{time_plan.price_display(currency_unit: usage_plan.currency_unit)})",
                    time_plan.id,
                    { 'data-toggle' => "collapse", 'data-target' => "\#time_plan_#{usage_plan.id}_#{time_plan.id}" }
                  ]
                },
                @subscription.time_plan_id
              ),

              { :include_blank => usage_plan.time_plan ? false : '- No addon selected -',
                :id => nil,
                :class => 'form-control form-control form-control-lg plan_addon_toggle'
              } ) %>
        <% usage_plan.optional_time_plans.each do |time_plan| %>
          <%= render :partial => 'time_plan', object: time_plan, locals: {usage_plan: usage_plan, subscription: subscription} %>
        <% end %>
      <% end %>
    </td>
  </tr>
<% elsif usage_plan.time_plan && !usage_plan.time_plan.price_free? %>
  <span class="included_price_element d-none" data-price="<%= usage_plan.time_plan.price %>"></span>
<% end %>

<% if usage_plan.optional_quota_plans.exists? || (usage_plan.quota_plan && !usage_plan.quota_plan.unlimited_usage_mb_up? && !usage_plan.quota_plan.unlimited_usage_mb_down?) %>
  <tr>
    <th class="border-right border-top-0">Quota</th>
    <td class="price-group">
      <% if (usage_plan.quota_plan && !usage_plan.quota_plan.unlimited_usage_mb_up? && !usage_plan.quota_plan.unlimited_usage_mb_down?) %>
        <b>Included with Plan:</b>
        <%= number_to_human_size(usage_plan.quota_plan.usage_bytes_down.to_i) %>
        download,
        <%= number_to_human_size(usage_plan.quota_plan.usage_bytes_up.to_i) %>
        upload
        <% if usage_plan.quota_plan.rollover_usage_mb %>
          : existing quota is rolled-over.
        <% end %>
        <%= render :partial => 'quota_plan', object: usage_plan.quota_plan, locals: {usage_plan: usage_plan, subscription: subscription} %>
      <% elsif usage_plan.quota_plan && !usage_plan.quota_plan.price_free? %>
        <span class="included_price_element d-none" data-price="<%= usage_plan.quota_plan.price %>"></span>
      <% end %>

      <% if usage_plan.optional_quota_plans.exists? %>
        <br>
        <b>Optional Quota configurations:</b>
        <br>
        <%= select_tag(
              "usage_plan[#{usage_plan.id}][quota_plan_id]",
              options_for_select(
                [
                  usage_plan.quota_plan ?
                    [
                      "#{usage_plan.quota_plan.name} (#{usage_plan.quota_plan.price_display(currency_unit: usage_plan.currency_unit)}) -- included with plan",
                      usage_plan.quota_plan.id,
                      { 'data-toggle' => "collapse", 'data-target' => "\#quota_plan_#{usage_plan.id}_#{usage_plan.quota_plan_id}" }
                    ] : nil
                ].compact +
                usage_plan.optional_quota_plans.map { |quota_plan|
                  [
                    "#{quota_plan.name} (#{quota_plan.price_display(currency_unit: usage_plan.currency_unit)})",
                    quota_plan.id,
                    { 'data-toggle' => "collapse", 'data-target' => "\#quota_plan_#{usage_plan.id}_#{quota_plan.id}" }
                  ]
                },
                @subscription.quota_plan_id
              ),

              { :include_blank => usage_plan.quota_plan ? false : '- No addon selected -',
                :id => nil,
                :class => 'form-control form-control form-control-lg plan_addon_toggle'
              } ) %>
        <% usage_plan.optional_quota_plans.each do |quota_plan| %>
          <%= render :partial => 'quota_plan', object: quota_plan, locals: {usage_plan: usage_plan, subscription: subscription} %>
        <% end %>
      <% end %>
    </td>
  </tr>
<% elsif usage_plan.quota_plan && !usage_plan.quota_plan.price_free? %>
  <span class="included_price_element d-none" data-price="<%= usage_plan.quota_plan.price %>"></span>
<% end %>

<%# always display all of the plan's addon options, not just the subcription addons %>
<% addons = usage_plan.plan_addons.where(included_with_plan: false).order(:component) %>
<% usage_plan.plan_addons.where(included_with_plan: true).each do |addon| %>
  <span class="included_price_element d-none" data-price="<%= addon.fixed_price %>"></span>
<% end %>
<% if addons.exists? %>
  <tr>
    <th class="border-right border-top-0">Optional Addons</th>
    <td>

      <% addons.group_by(&:component).each do |component, addons| %>
        <div class="addon_type price-group">
          <h4><%= addons.first.component_display %></h4>

          <%= fields_for("usage_plan[#{usage_plan.id}]", subscription.usage_plan) do |upf| %>
            <%= upf.select(:plan_addons,
              options_for_select(
                addons.map { |addon|
                  [
                    "#{addon.name} (#{addon.price_display})",
                    addon.id,
                    { 'data-toggle' => "collapse", 'data-target' => "\#plan_addon_options_#{usage_plan.id}_#{addon.id}" }
                  ]
                },
                # the "selected" option:
                subscription.subscription_addons.find { |sa| sa.plan_addon_id.in?( addons.collect(&:id) ) }.try(:plan_addon_id)
              ),
                  { :include_blank => '- No addon selected -' },
                  { :id => nil,
                    :class => 'form-control form-control form-control-lg plan_addon_toggle',
                    :name => "usage_plan[#{usage_plan.id}][plan_addon_ids][]" } ) %>
            <% addons.each do |addon| %>
              <%= render :partial => 'plan_addon', object: addon, locals: {
                subscription: subscription,
                usage_plan: usage_plan
              } %>
            <% end %>
            <% upf.fields_for :plan_addons do |paf| %>
              <% plan_addon = paf.object %>
              <%= paf.text_field :selected_quantity %>

            <% end %>
          <% end %>
          <hr>
        </div>
      <% end %>
    </td>
  </tr>
<% end %>

<% if usage_plan.is_recurring? && !usage_plan.price_free? %>
  <tr>
    <th class="border-right border-top-0">Payment</th>
    <td>
      Charged once immediately and billed
      <%= usage_plan.recurring_method %> to selected method of payment.
    </td>
  </tr>
<% end %>
<% if usage_plan.requires_account_validation? %>
  <tr>
    <th class="border-right border-top-0">Valdation</th>
    <td>
      Requires account validation by <%= UsagePlan::VALIDATION_METHODS.inverse[usage_plan.validation_method] %>.
    </td>
  </tr>
<% end %>


<% if subscription.price_was_adjusted_for_credit? %>
  <tr>
    <th class="border-right border-top-0">Existing Credit</td>
    <td><div class="right-align"><span class="credit-price-element price_display" data-credit="<%= subscription.credit %>">- <%= subscription.currency_unit %><%= subscription.credit %></span></div></td></tr>
<% end %>


<tr>
  <th>Total Price</th>
  <td>
    <div class="right-align">
      <span class="price_display"><%= usage_plan.currency_unit if !usage_plan.price_free? %></span><span class="price_display total_price"><%= subscription.price_display(currency_unit: '') %></span>
    </div>
  </td>
</tr>
<!--
  <tr>
    <th class="border-right border-top-0">Recurring</th>
    <td>
      <%= usage_plan.recurring_method %>
    </td>
  </tr>
  -->
</table>
</div>
